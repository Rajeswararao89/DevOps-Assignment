name: CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ap-south-1
  ECR_REPOSITORY_BACKEND: flask-backend
  ECR_REPOSITORY_FRONTEND: nextjs-frontend

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Docker
      uses: docker/setup-buildx-action@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build and Push Backend Docker Image
      run: |
        docker build -t $ECR_REPOSITORY_BACKEND ./backend
        docker tag $ECR_REPOSITORY_BACKEND:latest ${{ steps.login-ecr.outputs.registry }}/${ECR_REPOSITORY_BACKEND}:latest
        docker push ${{ steps.login-ecr.outputs.registry }}/${ECR_REPOSITORY_BACKEND}:latest

    - name: Build and Push Frontend Docker Image
      run: |
        docker build -t $ECR_REPOSITORY_FRONTEND ./frontend
        docker tag $ECR_REPOSITORY_FRONTEND:latest ${{ steps.login-ecr.outputs.registry }}/${ECR_REPOSITORY_FRONTEND}:latest
        docker push ${{ steps.login-ecr.outputs.registry }}/${ECR_REPOSITORY_FRONTEND}:latest

    - name: Terraform Apply
      run: |
        cd terraform
        terraform init
        terraform apply -auto-approve

